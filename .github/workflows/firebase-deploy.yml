name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      
      - name: Create firebase-config.js
        run: |
          cat > js/firebase-config.js << EOL
          const firebaseConfig = {
            apiKey: "${{ secrets.FIREBASE_API_KEY }}",
            authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.FIREBASE_APP_ID }}"
          };
          
          firebase.initializeApp(firebaseConfig);
          const auth = firebase.auth();
          const db = firebase.firestore();
          
          db.enablePersistence()
            .catch((err) => {
              if (err.code == 'failed-precondition') {
                console.log('Multiple tabs open');
              } else if (err.code == 'unimplemented') {
                console.log('Browser does not support persistence');
              }
            });
          EOL
      
      - name: Deploy to Firebase
        run: firebase deploy --token "${{ secrets.FIREBASE_TOKEN }}"
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

# To use this workflow:
# 1. Generate Firebase token: firebase login:ci
# 2. Add these secrets to your GitHub repository:
#    - FIREBASE_TOKEN (from step 1)
#    - FIREBASE_API_KEY
#    - FIREBASE_AUTH_DOMAIN
#    - FIREBASE_PROJECT_ID
#    - FIREBASE_STORAGE_BUCKET
#    - FIREBASE_MESSAGING_SENDER_ID
#    - FIREBASE_APP_ID
# 3. Push to main branch to trigger deployment
