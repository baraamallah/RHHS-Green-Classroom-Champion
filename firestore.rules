rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get user role
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }
    
    // Helper function to check if user is supervisor or admin
    function isSupervisorOrAdmin() {
      return isAuthenticated() && getUserRole() in ['admin', 'supervisor'];
    }
    
    // Classes collection - public read, authenticated write
    match /classes/{classId} {
      // Anyone can read classes (for public leaderboard)
      allow read: if true;
      
      // Only admins can create and delete classes
      allow create, delete: if isAdmin();
      
      // Admins and supervisors can update classes (for adding points)
      allow update: if isSupervisorOrAdmin();
    }
    
    // Users collection - restricted access
    match /users/{userId} {
      // Any authenticated user can read their own user document.
      allow get: if request.auth.uid == userId;

      // Only admins can list the entire users collection.
      allow list: if isAdmin();
      
      // Only admins can create, update, or delete users
      allow create, update, delete: if isAdmin();
    }
    
    // Points history collection
    match /pointsHistory/{historyId} {
      // Anyone can read history (for transparency)
      allow read: if true;
      
      // Only authenticated supervisors and admins can create history entries
      allow create: if isSupervisorOrAdmin();
      
      // Only admins can update or delete history
      allow update, delete: if isAdmin();
    }
  }
}
